    - n-layers architecture -> Pastas representadas como camadas -> cada camada possui uma Ãºnica responsabilidade;
        * database -> a file which store all application data -> # 1

        * src -> all source code
            - entities -> object mappings; -> # 4
            - factories -> instance generators; -> # 7
            - repositories -> data access; -> # 5 
            - routes -> endpoint mappings; -> # 3
            - services -> communication between the routes and repositories layer (business logic); -> # 6
            - util - shared code;
            - handler -> communication between routes and server; -> # 2
            - index -> server instance;

        * tests -> all automated test suites;
            - integration tests -> testing on the user point of view. it's also an E2E test, because there's no app consuming it
            - unit test -> all tests that must run without any external connections such as databases, external APIs and in this case, the fileSystem

npm init -y -> cria o package.json
https://www.shellscript.sh/